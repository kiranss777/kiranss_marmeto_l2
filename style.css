@import url("https://fonts.googleapis.com/css?family=Roboto:500");
html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
}
/*linear-gradient(to right bottom, #f2f0f2, rgb(245, 181, 236));*/

body {
  background: rgba(243, 212, 188, 0.479)
}

.mainContainer{
  display: flex;
}

.leftSection,.rightSection{
  flex: 1;
}

.productImage img{
  cursor: pointer;
  /*
  display: flex;
  overflow: hidden;
  align-items: center; 
  justify-content: space-between; 
  background-color: rgba(176, 167, 176, 0.9);
  */
  height: 600px;
  width: 500px; 
  margin-top: 5vh;
  margin-left:5vw ;
  box-sizing: border-box; 
  border-radius: 20px;  
}


.thumbnails{
  display: inline-block;
}


.thumbnails img{
  cursor: pointer;
  margin-top: 3vh;
  margin-left: 1vw;
  height: 150px;
  width: 150px;
  box-sizing: border-box; 
  border-radius: 20px;
  border: 4px solid transparent; /* Add transparent border to maintain layout */
  transition: border 0.3s; /* Smooth transition for the border */
}


.rightSection{
  font-family: 'Roboto', sans-serif;
  
  display: inline-block;
  overflow: hidden;
  align-items: center; 
  justify-content: space-between; 
  background-color: rgba(176, 167, 176, 0.3);
  height: 85vh;
  width: 500px; 
  margin-top: 5vh;
  margin-right: 2vw;
  box-sizing: border-box; 
  border-radius: 20px; 
  
}

.productVendor{
  
  font-size: 25px;
  color: rgba(12, 12, 12, 0.6);
  
  margin-top: 10px;
  margin-left: 20px;
}
.xyz{
  display: flex;          /* Enables Flexbox */
  align-items: center;
}
.productTitle{
  
  font-size: 40px;
  margin-top: 30px;
  margin-left: 20px;
  position: sticky;
}
.productTitle::after {
  content: '';
  position: absolute;
  left: 5px; /* Centers the line by pushing it 10% from the left */
  bottom: -10px; /* Adjust as needed to position below the text */
  width: 80vw;
  height: 2px; /* Thickness of the line */
  background-color: rgba(0, 0, 0, 0.259); /* Color of the line */
}
.cartButton {
  margin-top: 10px;
  margin-left: 550px;
  margin-right: 20px;
  height: 50px;
  width: 200px;
  display: flex;
  align-items: center;
  padding: 10px 20px;
  background-color: #304FFE; /* Adjust the color to match the image */
  border: none;
  border-radius: 25px;
  color: white;
  font-size: 16px; /* Adjust font-size as needed */
  cursor: pointer;
  outline: none;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.priceInfo{
  display: flex;
  margin-top: 40px;
  margin-left: 20px;
}
.price{
  color: rgb(89, 47, 241);
  font-size: 50px;
  margin-right: 40px;
}
.percentOff{
  margin-top: 10px;
  font-size: 20px;
  color: red;
}
.comparePrice{
  color: #00000087;
  font-size: 30px;
  margin-top: 10px;
  margin-left: 20px;
  position: sticky;
}
.comparePrice::after {
  content: '';
  position: absolute;
  left: 5px; /* Centers the line by pushing it 10% from the left */
  bottom: -10px; /* Adjust as needed to position below the text */
  width: 80vw;
  height: 2px; /* Thickness of the line */
  background-color: rgba(0, 0, 0, 0.259); /* Color of the line */
}

.textContent{
  margin-top: 30px;
  color: rgba(43, 41, 41, 0.606);
  margin-left: 20px;
}

.container {
  margin-top: 20px;
  margin-left: 50px;
  display: flex;
}

.label {
  position: relative;
  margin: 0 10px;
  cursor: pointer;
}

.button {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 60px;
  height: 60px;
  border-radius: 20%;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  transition: all 0.3s ease;
}

/* Unique colors for each button */
#green + .button {
  background: linear-gradient(135deg, #4CAF50 0%, #81C784 100%);
}

#blue + .button {
  background: linear-gradient(135deg, #2196F3 0%, #64B5F6 100%);
}

#yellow + .button {
  background: linear-gradient(135deg, #FFC107 0%, #FFD54F 100%);
}

#red + .button {
  background: linear-gradient(135deg, #740202 0%, #f72205 100%);
}

/* Black border for selected button */
.label input:checked + .button {
  border: 4px solid black;
}

.button::before, .button::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 20%;
  transition: all 0.3s ease;
}

.button::before {
  background-color: rgba(255, 255, 255, 0.15);
  transform: scale(0.9);
  opacity: 0;
}

.button::after {
  background-color: rgba(0, 0, 0, 0.1);
  transform: scale(1.1);
  opacity: 0;
}

.label input {
  display: none;
}

@keyframes pulse {
  0% {
    transform: scale(1.1);
    opacity: 1;
  }

  50% {
    transform: scale(1.5);
    opacity: 0;
  }

  100% {
    transform: scale(1.1);
    opacity: 1;
  }
}

.front {
  position: relative;
  z-index: 1;
}
.blank{
  position: sticky;
  margin-left: 20px;
}
.blank::after {
  content: '';
  position: absolute;
  left: 5px; /* Centers the line by pushing it 10% from the left */
  bottom: -10px; /* Adjust as needed to position below the text */
  width: 80vw;
  height: 2px; /* Thickness of the line */
  background-color: rgba(0, 0, 0, 0.259); /* Color of the line */
}

.sizeSelector{
  margin-top: 40px;
  margin-left: 20px;
}
.sizeSelector {
  
  display: flex;
  justify-content: space-around;
  padding: 10px;
  background-color: #f0f0f0;
  border-radius: 25px;
}

.sizeSelector input[type="radio"] {
  display: none;
}

.sizeSelector label {
  cursor: pointer;
  padding: 5px 10px;
  border: 2px solid transparent;
  border-radius: 15px;
  background-color: white;
  transition: background-color 0.3s, transform 0.3s;
}

.sizeSelector input[type="radio"]:checked + label {
  background-color: rgba(52, 55, 59, 0.614); /* Replace with the color code you want */
  transform: scale(1.1);
}

.sizeSelector label:hover {
  background-color: #e0e0e0;
}

.quantity-selector {
  margin-top: 50px;
  margin-left: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  background-color: #f0f0f0;
  border-radius: 25px;
  width: 100px; /* Adjust width as needed */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.quantity-selector button {
  border: none;
  background-color: transparent;
  cursor: pointer;
  font-weight: bold;
  font-size: 20px; /* Adjust font-size as needed */
}

.quantity-selector .quantity-display {
  margin: 0 10px;
}

.add-to-cart-button {
  margin-top: 50px;
  margin-left: 30px;
  height: 50px;
  
  position: relative;
  display: flex;
  align-items: center;
  padding: 10px 20px;
  background-color: #304FFE; /* Adjust the color to match the image */
  border: none;
  border-radius: 25px;
  color: white;
  font-size: 16px; /* Adjust font-size as needed */
  cursor: pointer;
  outline: none;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.notification-bubble {
  position: absolute;
  top: -10px; /* Adjust as needed */
  left: -10px; /* Adjust as needed */
  width: 24px; /* Adjust as needed */
  height: 24px; /* Adjust as needed */
  border-radius: 50%;
  background-color: #FFFFFF;
  color: #304FFE;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 12px; /* Adjust as needed */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.lock-icon {
  margin-right: 5px;
  /* if using a font icon library, set the class accordingly */
}

.cart{
  display: flex;
  position: sticky;
}

.cart::after {
  margin-left: 20px;
  content: '';
  position: absolute;
  left: 5px; /* Centers the line by pushing it 10% from the left */
  bottom: -10px; /* Adjust as needed to position below the text */
  width: 80vw;
  height: 2px; /* Thickness of the line */
  background-color: rgba(0, 0, 0, 0.259); /* Color of the line */
}


.description{
  margin-top: 30px;
  margin-left: 20px;
  font-size: 16px;
  max-height: fit-content;
  color: #0a000098;
}

.Additionals {
  display: flex;
  justify-content: space-around; /* This will space the buttons evenly */
  align-items: center;
  position: static;
  margin-top: 10px;
}


.sparkle-button {
  --active: 0;
  --bg: radial-gradient(
            40% 50% at center 100%,
            hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
            transparent
        ),
        radial-gradient(
            80% 100% at center 120%,
            hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
            transparent
        ),
        hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
  background: var(--bg);
  font-size: 1.2rem;
  font-weight: 500;
  border: 0;
  cursor: pointer;
  padding: 1em 1em;
  display: flex;
  align-items: center;
  gap: 0.25em;
  white-space: nowrap;
  border-radius: 100px;
  position: relative;
  box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) hsl(260 97% 61% / 0.75),
        0 0em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
        0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
  transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
  scale: calc(1 + (var(--active) * 0.1));
  transition: .3s;
}

.sparkle-button:active {
  scale: 1;
  transition: .3s;
}

.sparkle path {
  color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
  transform-box: fill-box;
  transform-origin: center;
  fill: currentColor;
  stroke: currentColor;
  animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
  animation-duration: 0.6s;
  transition: color var(--transition);
}

.sparkle-button:is(:hover, :focus-visible) path {
  animation-name: bounce;
}

@keyframes bounce {
  35%, 65% {
    scale: var(--scale);
  }
}

.sparkle path:nth-of-type(1) {
  --scale: 0.5;
  --delay: 0.1;
  --base: 40%;
}

.sparkle path:nth-of-type(2) {
  --scale: 1.5;
  --delay: 0.2;
  --base: 20%;
}

.sparkle path:nth-of-type(3) {
  --scale: 2.5;
  --delay: 0.35;
  --base: 30%;
}

.sparkle-button:before {
  content: "";
  position: absolute;
  inset: -0.2em;
  z-index: -1;
  border: 0.25em solid hsl(260 97% 50% / 0.5);
  border-radius: 100px;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.spark {
  position: absolute;
  inset: 0;
  border-radius: 100px;
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

.spark:before {
  -webkit-mask: radial-gradient(white, transparent 50%);
  mask: radial-gradient(white, transparent 50%);
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 0%;
  left: 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: calc((var(--active)) + 0.4);
  background: conic-gradient(
        from 0deg,
        transparent 0 340deg,
        white 360deg
    );
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
}

.spark:after {
  content: "";
  position: absolute;
  inset: var(--cut);
  border-radius: 100px;
}

.backdrop {
  position: absolute;
  inset: var(--cut);
  background: var(--bg);
  border-radius: 100px;
  transition: background var(--transition);
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}

@supports(selector(:has(:is(+ *)))) {
  body:has(button:is(:hover, :focus-visible)) {
    --active: 1;
    --play-state: running;
  }

  .bodydrop {
    display: none;
  }
}

.sparkle-button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
  --active: 1;
  --play-state: runnin;
}

.sparkle-button:is(:hover, :focus-visible) {
  --active: 1;
  --play-state: running;
}

.sp {
  position: relative;
}

.particle-pen {
  -webkit-mask: radial-gradient(white, transparent 50%);
  mask: radial-gradient(white, transparent 50%);
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  -webkit-mask: radial-gradient(white, transparent 65%);
  z-index: -1;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.particle {
  fill: white;
  width: calc(var(--size, 0.25) * 1rem);
  aspect-ratio: 1;
  position: absolute;
  top: calc(var(--y) * 1%);
  left: calc(var(--x) * 1%);
  opacity: var(--alpha, 1);
  animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
  transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
  z-index: -1;
  animation-play-state: var(--play-state, paused);
}

.particle path {
  fill: hsl(0 0% 90%);
  stroke: none;
}

.particle:nth-of-type(even) {
  animation-direction: reverse;
}

@keyframes float-out {
  to {
    rotate: 360deg;
  }
}

.text {
  background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
  -webkit-background-clip: text;
  background-clip: text;
  translate: 2% -6%;
  letter-spacing: 0.01ch;
  background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
  -webkit-background-clip: text;
  color: transparent;
  transition: background var(--transition);
}

.sparkle-button svg {
  inline-size: 1.25em;
  translate: -25% -5%;
}